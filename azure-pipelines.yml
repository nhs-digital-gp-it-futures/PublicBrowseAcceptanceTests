# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- development

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: buildConfiguration
    value: 'Release'
  - name: BROWSER
    value: chrome
  - group: dev-secrets

steps:
- script: |
    domain=`echo "$(PBURL)" | awk -F[/:] '{print $4}'`
    if [[ "$(PBURL)" == *"-dev.buyingcatalogue.digital.nhs.uk"* ]]
    then
      ip="51.11.46.27"
    elif [[ "$(PBURL)" == *"private-test.buyingcatalogue.digital.nhs.uk"* ]]
    then
      ip="51.132.54.44"
    elif [[ "$(PBURL)" == *"public-test.buyingcatalogue.digital.nhs.uk"* ]]
    then
      ip="51.132.53.156"
    fi
    if [[ -n "$ip" ]]
    then
      echo "$ip        $domain" | sudo tee -a /etc/hosts
      cat domain-template.yaml | sed "s/DOMAIN/$domain/g;s/IP/$ip/g" > domain.yml
    else
      touch domain.yml
    fi
    curl -k -i $(PBURL) --fail --connect-timeout 30
    cat domain.yml
    cat /etc/hosts
  displayName: 'Resolve domain'
- task: UseDotNet@2
  displayName: 'Use DotNet Core 3.1'
  inputs:
    version: '3.1.101'
    includePreviewVersions: false

- task: CopyFiles@2
  enabled: false
  inputs:
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: PublishBuildArtifacts@1
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
      
- bash: 
    "curl -k -i $(PBURL) --fail --connect-timeout 30"
  displayName: 'Check URL is reachable'

- task: Bash@3
  displayName: Selenium Grid Setup
  inputs:
    targetType: 'inline'
    script: |
      docker-compose stop &&
      docker-compose rm -f &&
      docker-compose -f docker-compose.yml -f domain.yml up --scale chrome=4 --scale firefox=4  -d
    
- bash: |
    export DB__SERVERURL=gpitfutures-dev-sql-pri.database.windows.net
    export DB__DATABASENAME=bc-buyingcatalogue-development-helm-bapi
    export DB__PASSWORD=$(gpitfuturesdevdbpassword)
    export AZUREBLOBSTORAGE__CONNECTIONSTRING="$(gpitdevstorageaccountconnectionstring)"
    export AZUREBLOBSTORAGE__CONTAINERNAME=buyingcatalogue-development-helm-documents

    dotnet test src/NHSDPublicBrowseAcceptanceTests.Tests/*.csproj -v n
  name: setUpVars
  displayName: Set up environment variables  

- bash: 'printenv'
  name: debug

- task: DotNetCoreCLI@2
  displayName: Run Acceptance Tests
  inputs:
    command: 'test'
    projects: 'src/NHSDPublicBrowseAcceptanceTests.Tests/*.csproj'
    arguments: '-v n'
  enabled: false